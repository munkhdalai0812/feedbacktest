[{"C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\index.js":"1","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\App.js":"2","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\reportWebVitals.js":"3","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\users\\AddUser.js":"4","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\users\\List.js":"5","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\services\\Users.js":"6","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\http-common.js":"7","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\users\\User.js":"8","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\reviews\\List.js":"9","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\services\\Reviews.js":"10","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\reviews\\Show.js":"11","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\reviews\\Assign.js":"12","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\reviews\\EmployeeReview.js":"13"},{"size":523,"mtime":1608876990436,"results":"14","hashOfConfig":"15"},{"size":1544,"mtime":1609045922022,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1700,"mtime":1608957443999,"results":"18","hashOfConfig":"15"},{"size":2590,"mtime":1608975177144,"results":"19","hashOfConfig":"15"},{"size":470,"mtime":1608959012607,"results":"20","hashOfConfig":"15"},{"size":165,"mtime":1608952048300,"results":"21","hashOfConfig":"15"},{"size":2710,"mtime":1608958974463,"results":"22","hashOfConfig":"15"},{"size":1097,"mtime":1608970337765,"results":"23","hashOfConfig":"15"},{"size":401,"mtime":1609050549479,"results":"24","hashOfConfig":"15"},{"size":1072,"mtime":1608971646994,"results":"25","hashOfConfig":"15"},{"size":1646,"mtime":1608980459372,"results":"26","hashOfConfig":"15"},{"size":2131,"mtime":1609050984072,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11fr8zw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\index.js",[],["60","61"],"C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\App.js",[],"C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\reportWebVitals.js",[],"C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\users\\AddUser.js",[],"C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\users\\List.js",["62","63","64"],"import React, { useState, useEffect } from \"react\";\r\nimport UsersDataService from \"../../services/Users\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst List = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveUsers();\r\n  }, []);\r\n\r\n  const onChangeSearchTitle = e => {\r\n    const searchTitle = e.target.value;\r\n    setSearchTitle(searchTitle);\r\n  };\r\n\r\n  const retrieveUsers = () => {\r\n    UsersDataService.getAll()\r\n      .then(response => {\r\n        setUsers(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveUsers();\r\n    setCurrentUser(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveUser = (user, index) => {\r\n    setCurrentUser(user);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <Link to={\"/add\"} className=\"nav-link\">\r\n             Add\r\n           </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>User List</h4>\r\n\r\n        <ul className=\"list-group\">\r\n          {users &&\r\n            users.map((user, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => setActiveUser(user, index)}\r\n                key={index}\r\n              >\r\n                {user.name}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {currentUser ? (\r\n          <div>\r\n            <h4>User</h4>\r\n            <div>\r\n              <label>\r\n                <strong>Name:</strong>\r\n              </label>{\" \"}\r\n              {currentUser.name}\r\n            </div>\r\n\r\n            <Link\r\n              to={\"/users/\" + currentUser.id}\r\n              className=\"badge badge-warning\"\r\n            >\r\n              Edit\r\n            </Link>\r\n\t\t\t\r\n\t\t\t<Link\r\n              to={\"/assign/\" + currentUser.id}\r\n              className=\"badge badge-success\"\r\n            >\r\n              Assign\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a User...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\services\\Users.js",["65"],"import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/employees\");\r\n};\r\n\r\nconst get = id => {\r\n  return http.get(`/employees/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n  return http.post(\"/employees\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/employees/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/employees/${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove\r\n};","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\http-common.js",[],"C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\users\\User.js",["66"],"import React, { useState, useEffect } from \"react\";\r\nimport UserDataService from \"../../services/Users\";\r\n\r\nconst User = props => {\r\n  const initialUserState = {\r\n    id: null,\r\n    name: \"\"\r\n  };\r\n  const [currentUser, setCurrentUser] = useState(initialUserState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getUser = id => {\r\n    UserDataService.get(id)\r\n      .then(response => {\r\n        setCurrentUser(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentUser({ ...currentUser, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n      id: currentUser.id,\r\n      name: currentUser.title\r\n    };\r\n\r\n    UserDataService.update(currentUser.id, data)\r\n      .then(response => {\r\n        setCurrentUser({ ...currentUser, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateUser = () => {\r\n    UserDataService.update(currentUser.id, currentUser)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"user data updated!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteUser = () => {\r\n    UserDataService.remove(currentUser.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        props.history.push(\"/users\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n   <div>\r\n      {currentUser ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Tutorial</h4>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={currentUser.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </form>\r\n\r\n          <button className=\"badge badge-danger mr-2\" onClick={deleteUser}>\r\n            Delete\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateUser}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a User...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\reviews\\List.js",[],"C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\services\\Reviews.js",["67"],"C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\reviews\\Show.js",["68"],"import React, { useState, useEffect } from \"react\";\r\nimport ReviewsDataService from \"../../services/Reviews\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Review = props => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getReview(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n\r\n  const getReview = id => {\r\n    ReviewsDataService.get(id)\r\n      .then(response => {\r\n        setReviews(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>User List</h4>\r\n\r\n        <ul className=\"list-group\">\r\n          {reviews &&\r\n            reviews.map((review, index) => (\r\n              <li>\r\n\t\t\t\t  {review.username} -> {review.averageRating}\r\n\t\t\t  </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\reviews\\Assign.js",["69","70"],"import React, { useState, useEffect } from \"react\";\r\nimport UsersDataService from \"../../services/Users\";\r\nimport ReviewsDataService from \"../../services/Reviews\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Assign = props => {\r\n  const [users, setUsers] = useState([]);\r\n  let selected_user = \"\";\r\n\r\n  useEffect(() => {\r\n    retrieveUsers();\r\n  }, []);\r\n\r\n\r\n  const retrieveUsers = () => {\r\n    UsersDataService.getAll()\r\n      .then(response => {\r\n        setUsers(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  \r\n  const handleInputChange = event => {\r\n    const { id, value } = event.target;\r\n    selected_user = value;\r\n  };\r\n  \r\n  const saveAssign = () => {\r\n\tlet to_employee_id = props.match.params.id\r\n    var data = {\r\n      to_employee: to_employee_id,\r\n\t  from_employee: selected_user\r\n    };\r\n\r\n    ReviewsDataService.assignUserCreate(data)\r\n      .then(response => {\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>Assign User</h4>\r\n\r\n        <select onChange={handleInputChange} id=\"user-id\">\r\n\t\t{users.map(user => (\r\n\t\t  <option key={user.id} value={user.id}>\r\n\t\t\t{user.name}\r\n\t\t  </option>\r\n\t\t))}\r\n        </select>\r\n\t\t<button onClick={saveAssign} className=\"btn btn-success\">\r\n\t\t  Submit\r\n\t    </button>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assign;","C:\\Users\\Dalai\\source\\repos\\Feedback\\react-front\\src\\components\\reviews\\EmployeeReview.js",["71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":9,"column":10,"nodeType":"79","messageId":"80","endLine":9,"endColumn":21},{"ruleId":"77","severity":1,"message":"81","line":15,"column":9,"nodeType":"79","messageId":"80","endLine":15,"endColumn":28},{"ruleId":"77","severity":1,"message":"82","line":31,"column":9,"nodeType":"79","messageId":"80","endLine":31,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":23,"column":1,"nodeType":"85","endLine":29,"endColumn":3},{"ruleId":"77","severity":1,"message":"86","line":32,"column":9,"nodeType":"79","messageId":"80","endLine":32,"endColumn":24},{"ruleId":"83","severity":1,"message":"84","line":19,"column":1,"nodeType":"85","endLine":24,"endColumn":3},{"ruleId":"77","severity":1,"message":"87","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"87","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"77","severity":1,"message":"88","line":27,"column":13,"nodeType":"79","messageId":"80","endLine":27,"endColumn":15},{"ruleId":"77","severity":1,"message":"87","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"77","severity":1,"message":"88","line":29,"column":13,"nodeType":"79","messageId":"80","endLine":29,"endColumn":15},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'searchTitle' is assigned a value but never used.","Identifier","unusedVar","'onChangeSearchTitle' is assigned a value but never used.","'refreshList' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'updatePublished' is assigned a value but never used.","'Link' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]